---
title: "Codebook"
format: html
editor: visual
jupyter: python3
---

## Imports

```{r}
library(tidyverse)
library(readr) 
library(tidymodels)
application_test<-read_csv(here::here("data/application_test.csv")) 
application_train <- read_csv(here::here("data/application_train.csv")) 
bureau_bal <- read_csv(here::here("data/bureau_balance.csv"))
bureau <- read_csv(here::here("data/bureau.csv")) 
ccbal <- read_csv(here::here("data/credit_card_balance.csv")) 
homecredit <- read_csv(here::here("data/HomeCredit_columns_description.csv")) 
cashbal <- read_csv(here::here("data/POS_CASH_balance.csv")) 
prevapp <- read_csv(here::here("data/previous_application.csv")) 
sample_sub <- read_csv(here::here("data/sample_submission.csv"))
```

## Reading in the Data

### Random Split of Data
```{r}
set.seed(123)
train_size <- floor(0.80 * nrow(application_train))
train_indices <- sample(seq_len(nrow(application_train)), size = train_size)
ran_train_data <- application_train[train_indices, ]
ran_val_data <- application_train[-train_indices, ]
```

### Stratified Split
```{r}
split_strat <- initial_split(application_train, prop = 0.8, strata = "TARGET")
strat_train_data <- training(split_strat)
strat_val_data <- testing(split_strat)
```

### Non Random Split - Represent Test Data

```{r}
glimpse(application_test)
```


## Data Engineering

```{r}

```

## Metric Custom Functions

### ROC-AUC, Accuracy, F-1, Specificity
```{r}
accuracy <- function(y_hat, y){
    correct <- sum(y_hat == y)
    total <- length(y)
    return(correct / total)
}

precision <- function(y_hat, y){
    tp <- sum ((y_hat == 1) && (y ==1))
    fp <- sum ((y_hat == 1) && (y == 0))
    precision <- tp / (tp+fp)
    return(precision)
}

recall <- function(y_hat, y){
    tp <- sum ((y_hat == 1) && (y ==1))
    fn <- sum ((y_hat == 0) && (y == 1))
    recall <- tp / (tp+fn)
    return(recall)
}

f1 <- function(y_hat, y){
    precision <- precision(y_hat, y)
    recall <- recall(y_hat, y)
    return (2 * (precision * recall) / (precision + recall))
}

specificity <- function(y_hat, y){
    fp <- sum ((y_hat == 1) && (y == 0))
    tn <- sum ((y_hat == 0) && (y == 0))
    return (tn/(tn+fp))
}

roc_auc <- function(y, y_hat){
    thresholds <- seq(0, 1, by = 0.01)
    tpr <- c()
    fpr <- c()
    for (t in thresholds){
        tp <- sum((y_hat >= t) && (y == 1))
        fn <- sum((y_hat < t) && (y == 1))
        fp <- sum((y_hat >= t) && (y == 0))
        tn <- sum((y_hat < t) && (y == 0))
        tpr <- c(tpr, tp / (tp + fn))
        fpr <- c(fpr, fp / (fp + tn))
    }
    auc <- 0
    for (i in 2:length(tpr)){
        auc <- auc + (fpr[i] - fpr[i-1]) * (tpr[i] + tpr[i-1]) / 2
    }
    return(auc)
}

```

## Models
### Linear 
```{r}

```