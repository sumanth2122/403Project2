---
title: "Codebook"
format: html
editor: visual
jupyter: python3
---

## Imports

```{r}
library(tidyverse)
library(readr) 
library(tidymodels)
application_test<-read_csv(here::here("data/application_test.csv")) 
application_train <- read_csv(here::here("data/application_train.csv")) 
bureau_bal <- read_csv(here::here("data/bureau_balance.csv"))
bureau <- read_csv(here::here("data/bureau.csv")) 
ccbal <- read_csv(here::here("data/credit_card_balance.csv")) 
homecredit <- read_csv(here::here("data/HomeCredit_columns_description.csv")) 
cashbal <- read_csv(here::here("data/POS_CASH_balance.csv")) 
prevapp <- read_csv(here::here("data/previous_application.csv")) 
sample_sub <- read_csv(here::here("data/sample_submission.csv"))
```

## Reading in the Data

### Random Split of Data
```{r}
set.seed(123)
train_size <- floor(0.80 * nrow(application_train))
train_indices <- sample(seq_len(nrow(application_train)), size = train_size)
ran_train_data <- application_train[train_indices, ]
ran_val_data <- application_train[-train_indices, ]
```

### Stratified Split
```{r}
library(tidymodels)
split_strat <- initial_split(application_train, prop = 0.8, strata = "TARGET")
strat_train_data <- training(split_strat)
strat_val_data <- testing(split_strat)
```

### Non Random Split - Represent Test Data

```{r}
glimpse(application_test)
```


## Data Engineering

```{r}
library(corrplot)
library(Hmisc)



clean_application_train <- application_train|>
  mutate(REGION_RATING = ((REGION_RATING_CLIENT+REGION_RATING_CLIENT_W_CITY)/2))|>
  select(c(SK_ID_CURR, TARGET, NAME_CONTRACT_TYPE, CODE_GENDER, FLAG_OWN_CAR, FLAG_OWN_REALTY, CNT_CHILDREN, AMT_INCOME_TOTAL, AMT_CREDIT, AMT_ANNUITY, AMT_GOODS_PRICE, NAME_INCOME_TYPE, NAME_EDUCATION_TYPE, NAME_FAMILY_STATUS, NAME_HOUSING_TYPE, REGION_POPULATION_RELATIVE, DAYS_BIRTH, DAYS_EMPLOYED, DAYS_REGISTRATION, DAYS_ID_PUBLISH,, FLAG_MOBIL, FLAG_EMP_PHONE, FLAG_WORK_PHONE, FLAG_CONT_MOBILE, FLAG_PHONE, FLAG_EMAIL, CNT_FAM_MEMBERS, REGION_RATING_CLIENT, REGION_RATING_CLIENT_W_CITY, REG_REGION_NOT_LIVE_REGION, REG_REGION_NOT_WORK_REGION, LIVE_REGION_NOT_WORK_REGION, REG_CITY_NOT_LIVE_CITY, REG_CITY_NOT_WORK_CITY, LIVE_CITY_NOT_WORK_CITY, EXT_SOURCE_1, EXT_SOURCE_2, EXT_SOURCE_3 ,OBS_30_CNT_SOCIAL_CIRCLE, DEF_30_CNT_SOCIAL_CIRCLE, OBS_60_CNT_SOCIAL_CIRCLE, DEF_60_CNT_SOCIAL_CIRCLE, DAYS_LAST_PHONE_CHANGE, FLAG_DOCUMENT_2, FLAG_DOCUMENT_3, FLAG_DOCUMENT_4, FLAG_DOCUMENT_5, FLAG_DOCUMENT_6, FLAG_DOCUMENT_7, FLAG_DOCUMENT_8, FLAG_DOCUMENT_9, FLAG_DOCUMENT_10, FLAG_DOCUMENT_11, FLAG_DOCUMENT_12,FLAG_DOCUMENT_13, FLAG_DOCUMENT_14, FLAG_DOCUMENT_15, FLAG_DOCUMENT_16, FLAG_DOCUMENT_17, FLAG_DOCUMENT_18, FLAG_DOCUMENT_19, FLAG_DOCUMENT_20, FLAG_DOCUMENT_21))|>
  select(-c(REGION_RATING_CLIENT, REGION_RATING_CLIENT_W_CITY))




app_train <- clean_application_train|>
  select_if(is.numeric)|>
  select(-TARGET)


cor_mat <- cor(app_train)
cor_mat[!lower.tri(cor_mat)]
data.frame(cor_mat) |>
              rownames_to_column() |>
              gather(key="variable", value="correlation", -rowname) |>
              filter(abs(correlation) > 0.5)|>
              filter(abs(correlation) != 1.0)


```

## Metric Custom Functions

```{r}

```

## Models

```{r}

```